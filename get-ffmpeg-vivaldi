#! /bin/bash


id=$(id -u)
branch="$1"
url="http://security.ubuntu.com/ubuntu/pool/universe/c/chromium-browser/"
dir="xx"

if [ "$branch" = "stable" ]
then
	dir="vivaldi"
fi

if [ "$branch" = "snapshot" ]
then
	dir="vivaldi-snapshot"
fi

# TODO  : check arch
# 17.10 = glibc2.26
tar=$(wget -O - -q $url | grep chromium-codecs-ffmpeg-extra | grep "17.10" | grep amd64 | tail -1 | cut -d'"' -f8)

if [ $dir = "xx" ]
then
	echo "To install FFMPEG codec for stable version   : get-ffmpeg-vivaldi stable"
	echo "To install FFMPEG codec for snapshot version : get-ffmpeg-vivaldi snapshot"
	exit 0;
fi

if [ $id -eq 0 ]
then
	cd /tmp
	mkdir get-ffmpeg-vivaldi-$branch
	cd get-ffmpeg-vivaldi-$branch
	echo Downloading FFMPEG for Vivaldi $branch...
	wget -q "$url$tar"
	if [ $? -eq 0 ]
	then
		echo "Download OK !"
	else
		echo "Download Failed !"
		exit 2
	fi
	echo Extracting FFMPEG for Vivaldi $branch...
	ar x $tar
	if [ $? -eq 0 ]
	then
		tar -xf data.tar.xz -C . 2>/dev/null
	else
		ls /un-chemin-pour-retourner-une-erreur-mdr
	fi
	if [ $? -eq 0 ]
	then
		echo "Extraction OK !"
	else
		echo "Extraction Failed !"
		exit 3
	fi
	echo Installing FFMPEG for Vivaldi $branch...
	cp -f usr/lib/chromium-browser/libffmpeg.so /opt/$dir/libffmpeg.so
	if [ $? -eq 0 ]
	then
		echo "Install OK !"
	else
		echo "Install Failed !"
		exit 4
	fi

	echo "Search for missing dependancies or wrong versions on your system ..."
	LANGUAGE=en ldd /opt/vivaldi-$branch/libffmpeg.so 2>/dev/null | grep "not found"
	echo "Searching completed !"
	

	echo "Cleaning temporary files ..."
	rm -rf /tmp/get-ffmpeg-vivaldi-$branch
	if [ $? -eq 0 ]
	then
		echo "Clean OK !"
	else
		echo "Clean Failed !"
		exit 5
	fi
else
	echo Program must be executed with root right
	exit 1
fi

